parameters:
- name: pat_token
  type: string
- name: release_version
  type: string
  default: 'latest'
- name: synapse_shir_name 
  type: string
  default: ''

variables:
  current_date: $[ format('{0:yyyy}_{0:MM}_{0:dd}', pipeline.startTime) ]

name: SDLH Synapse Deployment

pr: none
trigger: none

pool:
  vmImage: 'ubuntu-latest'

steps:
- checkout: git://$(System.TeamProject)/$(Build.Repository.Name)@main

- task: CmdLine@2
  inputs:
    script: |
      git config --local user.email "noreply@ansgroup.co.uk"
      git config --local user.name $(Build.RequestedFor)
  displayName: 'Setup Git'

- task: CmdLine@2
  inputs:
    script: |
      if [[ ${{ parameters.release_version }} == "latest" ]]; then
        git clone -b main --single-branch https://github.com/ans-coe/sdlh-synapse
        cd sdlh-synapse
        git branch -a
      else
        git clone -b ${{ parameters.release_version }} --single-branch https://github.com/ans-coe/sdlh-synapse
        cd sdlh-synapse
        git branch -a
      fi
    workingDirectory: '../'
  displayName: 'Get Upstream'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      echo ""
      echo "Reading in linked service json files to replace SHIR name value where required"
      echo ""
      $folder = "linkedService"
      if (Test-Path ".\$folder") {
        Get-ChildItem -Path ".\$folder" | Sort-Object |
        Foreach-Object {
          $fileName = $_.Name
      
          # Read in files and replace matching object value
          $json = Get-Content -Path ".\$folder\$fileName" | ConvertFrom-Json
          $json.update | % {if($json.name -like "*shir") {$json.properties.connectVia.referenceName = "${{ parameters.synapse_shir_name }}" }}
          $json | ConvertTo-Json -Depth 4 | Set-Content -NoNewline -Force ".\$folder\$fileName"
          echo "Checked file: $fileName"
        }
      }
    pwsh: true
    workingDirectory: '../sdlh-synapse/synapse_workspace'
  displayName: 'Complete Required Custom Updates'

- task: CmdLine@2
  inputs:
    script: |
      cp -r ./synapse_workspace/* $(System.DefaultWorkingDirectory)
      cd $(System.DefaultWorkingDirectory)
    workingDirectory: '../sdlh-synapse'
    failOnStderr: true
  displayName: 'Copy Generated Config'

- task: CmdLine@2
  inputs:
    script: |
      if [[ -n $(git status --porcelain) ]]; then
        echo "There are modified or untracked files."
        git add .
        git commit -m "sdlh_updates_$(current_date)"
        echo "##vso[task.setvariable variable=updates]true"
      else
        echo "There are no modified or untracked files."
        echo "##vso[task.setvariable variable=updates]false"
      fi
  displayName: 'Check for Updates'

- task: CmdLine@2
  inputs:
    script: |
      if [ "$(updates)" == "true" ]; then
        git remote set-url origin $(git remote get-url origin | sed "s|https://[^@]*@dev.azure.com|https://${{ parameters.pat_token }}@dev.azure.com|") 
        echo "Pushing changes to preview-sdlh-updates branch."
        git push origin HEAD:refs/heads/preview-sdlh-updates-build$(Build.BuildId)
      else
        echo "No updates to push."
      fi
  displayName: 'Push Changes'